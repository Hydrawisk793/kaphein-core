#ifndef KAPHEIN_HGRD_kaphein_def_h
#define KAPHEIN_HGRD_kaphein_def_h

#include "compconst.h"
#include "config.h"

/* ******************************** */
/* Internal macro definitions */

#define KAPHEIN_x_static_assert(condition, message) {enum { static_assert_value = 1 / (!!(condition)) };}
#define KAPHEIN_x_horrible_cast(targetPtrType, ptr) ((targetPtrType)((void *)(ptr)))
#define KAPHEIN_x_const_horrible_cast(targetConstPtrType, ptr) ((targetConstPtrType)((const void *)(ptr)))
#if defined(_MSC_VER)
    #define KAPHEIN_x_UNUSED_PARAMETER(p) p;
#else
    #define KAPHEIN_x_UNUSED_PARAMETER(p)
#endif

#define KAPHEIN_x_FIND_MINIMUM_SIGNED_INT(bitCount, a, b) (a - ((a - b) & ((a - b) >> (bitCount - 1))))
#define KAPHEIN_x_FIND_MAXIMUM_SIGNED_INT(bitCount, a, b) (b + ((a - b) & ((a - b) >> (bitCount - 1))))

#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_1 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_1 0x1
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_2 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_2 0x3
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_3 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_3 0x7
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_4 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_4 0xF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_5 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_5 0x1F
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_6 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_6 0x3F
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_7 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_7 0x7F
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_8 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_8 0xFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_9 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_9 0x1FF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_10 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_10 0x3FF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_11 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_11 0x7FF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_12 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_12 0xFFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_13 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_13 0x1FFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_14 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_14 0x3FFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_15 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_15 0x7FFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_16 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_16 0xFFFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_17 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_17 0x1FFFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_18 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_18 0x3FFFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_19 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_19 0x7FFFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_20 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_20 0xFFFFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_21 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_21 0x1FFFFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_22 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_22 0x3FFFFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_23 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_23 0x7FFFFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_24 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_24 0xFFFFFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_25 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_25 0x1FFFFFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_26 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_26 0x3FFFFFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_27 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_27 0x7FFFFFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_28 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_28 0xFFFFFFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_29 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_29 0x1FFFFFFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_30 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_30 0x3FFFFFFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_31 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_31 0x7FFFFFFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_32 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_32 0xFFFFFFFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_33 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_33 0x1FFFFFFFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_34 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_34 0x3FFFFFFFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_35 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_35 0x7FFFFFFFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_36 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_36 0xFFFFFFFFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_37 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_37 0x1FFFFFFFFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_38 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_38 0x3FFFFFFFFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_39 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_39 0x7FFFFFFFFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_40 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_40 0xFFFFFFFFFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_41 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_41 0x1FFFFFFFFFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_42 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_42 0x3FFFFFFFFFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_43 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_43 0x7FFFFFFFFFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_44 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_44 0xFFFFFFFFFFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_45 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_45 0x1FFFFFFFFFFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_46 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_46 0x3FFFFFFFFFFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_47 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_47 0x7FFFFFFFFFFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_48 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_48 0xFFFFFFFFFFFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_49 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_49 0x1FFFFFFFFFFFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_50 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_50 0x3FFFFFFFFFFFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_51 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_51 0x7FFFFFFFFFFFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_52 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_52 0xFFFFFFFFFFFFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_53 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_53 0x1FFFFFFFFFFFFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_54 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_54 0x3FFFFFFFFFFFFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_55 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_55 0x7FFFFFFFFFFFFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_56 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_56 0xFFFFFFFFFFFFFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_57 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_57 0x1FFFFFFFFFFFFFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_58 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_58 0x3FFFFFFFFFFFFFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_59 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_59 0x7FFFFFFFFFFFFFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_60 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_60 0xFFFFFFFFFFFFFFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_61 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_61 0x1FFFFFFFFFFFFFFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_62 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_62 0x3FFFFFFFFFFFFFFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_63 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_63 0x7FFFFFFFFFFFFFFF
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_64 0x0
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_64 0xFFFFFFFFFFFFFFFF

#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_EXPAND(bitSize) \
    KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_##bitSize
#define KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE(bitSize) \
    KAPHEIN_x_UNSIGNED_INTEGER_MINIMUM_VALUE_EXPAND(bitSize)

#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_EXPAND(bitSize) \
    KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_##bitSize
#define KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE(bitSize) \
    KAPHEIN_x_UNSIGNED_INTEGER_MAXIMUM_VALUE_EXPAND(bitSize)

#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_1 0x1
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_1 0x0
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_2 0x2
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_2 0x1
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_3 0x4
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_3 0x3
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_4 0x8
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_4 0x7
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_5 0x10
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_5 0xF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_6 0x20
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_6 0x1F
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_7 0x40
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_7 0x3F
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_8 0x80
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_8 0x7F
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_9 0x100
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_9 0xFF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_10 0x200
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_10 0x1FF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_11 0x400
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_11 0x3FF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_12 0x800
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_12 0x7FF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_13 0x1000
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_13 0xFFF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_14 0x2000
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_14 0x1FFF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_15 0x4000
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_15 0x3FFF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_16 0x8000
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_16 0x7FFF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_17 0x10000
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_17 0xFFFF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_18 0x20000
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_18 0x1FFFF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_19 0x40000
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_19 0x3FFFF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_20 0x80000
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_20 0x7FFFF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_21 0x100000
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_21 0xFFFFF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_22 0x200000
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_22 0x1FFFFF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_23 0x400000
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_23 0x3FFFFF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_24 0x800000
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_24 0x7FFFFF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_25 0x1000000
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_25 0xFFFFFF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_26 0x2000000
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_26 0x1FFFFFF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_27 0x4000000
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_27 0x3FFFFFF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_28 0x8000000
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_28 0x7FFFFFF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_29 0x10000000
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_29 0xFFFFFFF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_30 0x20000000
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_30 0x1FFFFFFF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_31 0x40000000
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_31 0x3FFFFFFF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_32 0x80000000
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_32 0x7FFFFFFF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_33 0x100000000
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_33 0xFFFFFFFF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_34 0x200000000
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_34 0x1FFFFFFFF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_35 0x400000000
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_35 0x3FFFFFFFF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_36 0x800000000
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_36 0x7FFFFFFFF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_37 0x1000000000
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_37 0xFFFFFFFFF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_38 0x2000000000
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_38 0x1FFFFFFFFF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_39 0x4000000000
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_39 0x3FFFFFFFFF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_40 0x8000000000
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_40 0x7FFFFFFFFF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_41 0x10000000000
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_41 0xFFFFFFFFFF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_42 0x20000000000
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_42 0x1FFFFFFFFFF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_43 0x40000000000
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_43 0x3FFFFFFFFFF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_44 0x80000000000
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_44 0x7FFFFFFFFFF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_45 0x100000000000
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_45 0xFFFFFFFFFFF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_46 0x200000000000
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_46 0x1FFFFFFFFFFF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_47 0x400000000000
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_47 0x3FFFFFFFFFFF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_48 0x800000000000
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_48 0x7FFFFFFFFFFF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_49 0x1000000000000
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_49 0xFFFFFFFFFFFF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_50 0x2000000000000
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_50 0x1FFFFFFFFFFFF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_51 0x4000000000000
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_51 0x3FFFFFFFFFFFF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_52 0x8000000000000
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_52 0x7FFFFFFFFFFFF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_53 0x10000000000000
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_53 0xFFFFFFFFFFFFF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_54 0x20000000000000
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_54 0x1FFFFFFFFFFFFF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_55 0x40000000000000
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_55 0x3FFFFFFFFFFFFF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_56 0x80000000000000
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_56 0x7FFFFFFFFFFFFF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_57 0x100000000000000
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_57 0xFFFFFFFFFFFFFF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_58 0x200000000000000
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_58 0x1FFFFFFFFFFFFFF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_59 0x400000000000000
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_59 0x3FFFFFFFFFFFFFF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_60 0x800000000000000
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_60 0x7FFFFFFFFFFFFFF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_61 0x1000000000000000
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_61 0xFFFFFFFFFFFFFFF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_62 0x2000000000000000
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_62 0x1FFFFFFFFFFFFFFF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_63 0x4000000000000000
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_63 0x3FFFFFFFFFFFFFFF
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_64 0x8000000000000000
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_64 0x7FFFFFFFFFFFFFFF

#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_EXPAND(bitSize) \
    KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_##bitSize
#define KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE(bitSize) \
    KAPHEIN_x_SIGNED_INTEGER_MINIMUM_VALUE_EXPAND(bitSize)

#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_EXPAND(bitSize) \
    KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_##bitSize
#define KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE(bitSize) \
    KAPHEIN_x_SIGNED_INTEGER_MAXIMUM_VALUE_EXPAND(bitSize)

#define KAPHEIN_x_INTEGER_TYPE_0 UNSIGNED
#define KAPHEIN_x_INTEGER_TYPE_1 SIGNED
#define KAPHEIN_x_INTEGER_TYPE(isSigned) \
    KAPHEIN_x_INTEGER_TYPE_##isSigned

#define KAPHEIN_x_INTEGER_MINIMUM_VALUE_EXPAND_2(isSigned, bitSize) \
    KAPHEIN_x_##isSigned##_INTEGER_MINIMUM_VALUE_##bitSize
#define KAPHEIN_x_INTEGER_MINIMUM_VALUE_EXPAND_1(isSigned, bitSize) \
    KAPHEIN_x_INTEGER_MINIMUM_VALUE_EXPAND_2(isSigned, bitSize)
#define KAPHEIN_x_INTEGER_MINIMUM_VALUE(isSigned, bitSize) \
    KAPHEIN_x_INTEGER_MINIMUM_VALUE_EXPAND_1(KAPHEIN_x_INTEGER_TYPE(isSigned), bitSize)

#define KAPHEIN_x_INTEGER_MAXIMUM_VALUE_EXPAND_2(isSigned, bitSize) \
    KAPHEIN_x_##isSigned##_INTEGER_MAXIMUM_VALUE_##bitSize
#define KAPHEIN_x_INTEGER_MAXIMUM_VALUE_EXPAND_1(isSigned, bitSize) \
    KAPHEIN_x_INTEGER_MAXIMUM_VALUE_EXPAND_2(isSigned, bitSize)
#define KAPHEIN_x_INTEGER_MAXIMUM_VALUE(isSigned, bitSize) \
    KAPHEIN_x_INTEGER_MAXIMUM_VALUE_EXPAND_1(KAPHEIN_x_INTEGER_TYPE(isSigned), bitSize)
    
/* ******************************** */

/* ******************************** */
/* Platform */

#if !defined(KAPHEIN_COMPOPT_PLATFORM_MODE) || KAPHEIN_COMPOPT_PLATFORM_MODE == 1
    #undef KAPHEIN_COMPOPT_PLATFORM

    #if defined(_WIN32) || defined(__WIN32__) || defined(__TOS_WIN__) || defined(__WINDOWS__)
        #define KAPHEIN_COMPOPT_PLATFORM KAPHEIN_PLATFORM_WINDOWS
    #elif defined(MSDOS) || defined(__MSDOS__) || defined(_MSDOS) || defined(__DOS__)
        #define KAPHEIN_COMPOPT_PLATFORM KAPHEIN_PLATFORM_MSDOS
    #elif defined(__ANDROID__)
        #define KAPHEIN_COMPOPT_PLATFORM KAPHEIN_PLATFORM_ANDROID
    #elif defined(__linux__)
        #define KAPHEIN_COMPOPT_PLATFORM KAPHEIN_PLATFORM_LINUX
    #elif defined(unix) || defined(__unix__) || defined(__unix)
        #define KAPHEIN_COMPOPT_PLATFORM KAPHEIN_PLATFORM_UNIX
    #else
        #define KAPHEIN_COMPOPT_PLATFORM KAPHEIN_PLATFORM_UNKNOWN
    #endif
#endif

#define KAPHEIN_PLATFORM KAPHEIN_COMPOPT_PLATFORM

/* ******************************** */

/* ******************************** */
/* Architecture */

#if !defined(KAPHEIN_COMPOPT_ACHITECTURE_MODE) || KAPHEIN_COMPOPT_ACHITECTURE_MODE == 1
    #undef KAPHEIN_COMPOPT_ACHITECTURE

    #if defined(i386) || defined(__i386) || defined(__i386__) || defined(__I86__) \
        || defined(__386) || defined(_M_IX86) || defined(__X86__) || defined(_X86_) \
        || defined(__IA32__) || defined(__THW_INTEL__) || defined(__INTEL__)
        #define KAPHEIN_COMPOPT_ACHITECTURE KAPHEIN_ACHITECTURE_X86
    #elif defined(__amd64__) || defined(__amd64) \
        || defined(__x86_64__) || defined(__x86_64) \
        || defined(_M_X64) || defined(_M_AMD64)
        #define KAPHEIN_COMPOPT_ACHITECTURE KAPHEIN_ACHITECTURE_X64
    #endif
#endif

#define KAPHEIN_ACHITECTURE KAPHEIN_COMPOPT_ACHITECTURE

/* ******************************** */

/* ******************************** */
/* Null value */

#if !defined(KAPHEIN_COMPOPT_NULL_VALUE_MODE) || KAPHEIN_COMPOPT_NULL_VALUE_MODE == 1
    #ifdef __cplusplus
        #define KAPHEIN_COMPOPT_NULL 0
    #else
        #define KAPHEIN_COMPOPT_NULL ((void *)0)
    #endif
#endif

#define KAPHEIN_NULL KAPHEIN_COMPOPT_NULL

/* ******************************** */

/* ******************************** */
/* Bool type */

#ifndef __cplusplus
    #if !defined(KAPHEIN_COMPOPT_BOOL_TYPE_MODE) || KAPHEIN_COMPOPT_BOOL_TYPE_MODE == 1
        #if defined(__STDC_VERSION__) || (defined(_MSC_VER) && _MSC_VER >= 1800)
            #include <stdbool.h>
        #else
            #ifndef _Bool
                #define _Bool unsigned char
            #endif
            #ifndef bool
                #define bool _Bool
            #endif
            #ifndef false
                #define false ((_Bool)0)
            #endif
            #ifndef true
                #define true ((_Bool)1)
            #endif
        #endif
    #else
        #undef _Bool
        #define _Bool KAPHEIN_COMPOPT_BOOL_TYPE
        #undef bool
        #define bool _Bool
        #undef false
        #define false ((_Bool)KAPHEIN_COMPOPT_FALSE_VALUE)
        #undef true
        #define true ((_Bool)KAPHEIN_COMPOPT_TRUE_VALUE)
    #endif
#endif

/* ******************************** */

/* ******************************** */
/* Integral types */

#if !defined(KAPHEIN_COMPOPT_INTEGRAL_TYPE_MODE) || KAPHEIN_COMPOPT_INTEGRAL_TYPE_MODE == 1
    #include <stdint.h>
    #include <limits.h>

    #define KAPHEIN_COMPOPT_INTLEAST8_TYPE int_least8_t
    #define KAPHEIN_COMPOPT_INTLEAST8_BITSIZE 8
    #define KAPHEIN_COMPOPT_INTLEAST8_IS_SIGNED 1
    
    #define KAPHEIN_COMPOPT_UINTLEAST8_TYPE uint_least8_t
    #define KAPHEIN_COMPOPT_UINTLEAST8_BITSIZE 8
    #define KAPHEIN_COMPOPT_UINTLEAST8_IS_SIGNED 0

    #define KAPHEIN_COMPOPT_INTLEAST16_TYPE int_least16_t
    #define KAPHEIN_COMPOPT_INTLEAST16_BITSIZE 16
    #define KAPHEIN_COMPOPT_INTLEAST16_IS_SIGNED 1

    #define KAPHEIN_COMPOPT_UINTLEAST16_TYPE uint_least16_t
    #define KAPHEIN_COMPOPT_UINTLEAST16_BITSIZE 16
    #define KAPHEIN_COMPOPT_UINTLEAST16_IS_SIGNED 0

    #define KAPHEIN_COMPOPT_INTLEAST32_TYPE int_least32_t
    #define KAPHEIN_COMPOPT_INTLEAST32_BITSIZE 32
    #define KAPHEIN_COMPOPT_INTLEAST32_IS_SIGNED 1

    #define KAPHEIN_COMPOPT_UINTLEAST32_TYPE uint_least32_t
    #define KAPHEIN_COMPOPT_UINTLEAST32_BITSIZE 32
    #define KAPHEIN_COMPOPT_UINTLEAST32_IS_SIGNED 0

    #define KAPHEIN_COMPOPT_INTLEAST64_TYPE int_least64_t
    #define KAPHEIN_COMPOPT_INTLEAST64_BITSIZE 64
    #define KAPHEIN_COMPOPT_INTLEAST64_IS_SIGNED 1

    #define KAPHEIN_COMPOPT_UINTLEAST64_TYPE uint_least64_t
    #define KAPHEIN_COMPOPT_UINTLEAST64_BITSIZE 64
    #define KAPHEIN_COMPOPT_UINTLEAST64_IS_SIGNED 0

    #define KAPHEIN_COMPOPT_SIZE_TYPE size_t
    #if KAPHEIN_ACHITECTURE == KAPHEIN_ACHITECTURE_X64
        #define KAPHEIN_COMPOPT_SIZE_BITSIZE 64
    #elif KAPHEIN_ACHITECTURE == KAPHEIN_ACHITECTURE_X86
        #define KAPHEIN_COMPOPT_SIZE_BITSIZE 32
    #else
        #error The architecture is exotic.
    #endif
    #if KAPHEIN_COMPOPT_SIZE_BITSIZE >= 64
    #define KAPHEIN_COMPOPT_SSIZE_TYPE kaphein_IntLeast64
    #elif KAPHEIN_COMPOPT_SIZE_BITSIZE >= 32
    #define KAPHEIN_COMPOPT_SSIZE_TYPE kaphein_IntLeast32
    #elif KAPHEIN_COMPOPT_SIZE_BITSIZE >= 16
    #define KAPHEIN_COMPOPT_SSIZE_TYPE kaphein_IntLeast16
    #elif KAPHEIN_COMPOPT_SIZE_BITSIZE >= 8
    #define KAPHEIN_COMPOPT_SSIZE_TYPE kaphein_IntLeast8
    #else
    #error The size of 'kaphein_Size' is exotic.
    #endif

    #define KAPHEIN_COMPOPT_INTPTR_TYPE intptr_t
    #define KAPHEIN_COMPOPT_INTPTR_BITSIZE 64
    #define KAPHEIN_COMPOPT_INTPTR_MINIMUM INTPTR_MIN
    #define KAPHEIN_COMPOPT_INTPTR_MAXIMUM INTPTR_MAX

    #define KAPHEIN_COMPOPT_UINTPTR_TYPE uintptr_t
    #define KAPHEIN_COMPOPT_UINTPTR_BITSIZE 64
    #define KAPHEIN_COMPOPT_UINTPTR_MINIMUM 0
    #define KAPHEIN_COMPOPT_UINTPTR_MAXIMUM UINTPTR_MAX

    #define KAPHEIN_COMPOPT_PTRDIFF_TYPE ptrdiff_t
    #define KAPHEIN_COMPOPT_PTRDIFF_BITSIZE 64
    #define KAPHEIN_COMPOPT_PTRDIFF_MINIMUM PTRDIFF_MIN
    #define KAPHEIN_COMPOPT_PTRDIFF_MAXIMUM PTRDIFF_MAX
#endif

typedef KAPHEIN_COMPOPT_INTLEAST8_TYPE kaphein_IntLeast8;
#define KAPHEIN_INTLEAST8_BITSIZE KAPHEIN_COMPOPT_INTLEAST8_BITSIZE
#define KAPHEIN_INTLEAST8_IS_SIGNED KAPHEIN_COMPOPT_INTLEAST8_IS_SIGNED
#define KAPHEIN_INTLEAST8_MINIMUM KAPHEIN_x_INTEGER_MINIMUM_VALUE(KAPHEIN_INTLEAST8_IS_SIGNED, KAPHEIN_INTLEAST8_BITSIZE)
#define KAPHEIN_INTLEAST8_MAXIMUM KAPHEIN_x_INTEGER_MAXIMUM_VALUE(KAPHEIN_INTLEAST8_IS_SIGNED, KAPHEIN_INTLEAST8_BITSIZE)

typedef KAPHEIN_COMPOPT_UINTLEAST8_TYPE kaphein_UIntLeast8;
#define KAPHEIN_UINTLEAST8_BITSIZE KAPHEIN_COMPOPT_UINTLEAST8_BITSIZE
#define KAPHEIN_UINTLEAST8_IS_SIGNED KAPHEIN_COMPOPT_UINTLEAST8_IS_SIGNED
#define KAPHEIN_UINTLEAST8_MINIMUM KAPHEIN_x_INTEGER_MINIMUM_VALUE(KAPHEIN_UINTLEAST8_IS_SIGNED, KAPHEIN_UINTLEAST8_BITSIZE)
#define KAPHEIN_UINTLEAST8_MAXIMUM KAPHEIN_x_INTEGER_MAXIMUM_VALUE(KAPHEIN_UINTLEAST8_IS_SIGNED, KAPHEIN_UINTLEAST8_BITSIZE)

typedef KAPHEIN_COMPOPT_INTLEAST16_TYPE kaphein_IntLeast16;
#define KAPHEIN_INTLEAST16_BITSIZE KAPHEIN_COMPOPT_INTLEAST16_BITSIZE
#define KAPHEIN_INTLEAST16_IS_SIGNED KAPHEIN_COMPOPT_INTLEAST16_IS_SIGNED
#define KAPHEIN_INTLEAST16_MINIMUM KAPHEIN_x_INTEGER_MINIMUM_VALUE(KAPHEIN_INTLEAST16_IS_SIGNED, KAPHEIN_INTLEAST16_BITSIZE)
#define KAPHEIN_INTLEAST16_MAXIMUM KAPHEIN_x_INTEGER_MAXIMUM_VALUE(KAPHEIN_INTLEAST16_IS_SIGNED, KAPHEIN_INTLEAST16_BITSIZE)

typedef KAPHEIN_COMPOPT_UINTLEAST16_TYPE kaphein_UIntLeast16;
#define KAPHEIN_UINTLEAST16_BITSIZE KAPHEIN_COMPOPT_UINTLEAST16_BITSIZE
#define KAPHEIN_UINTLEAST16_IS_SIGNED KAPHEIN_COMPOPT_UINTLEAST16_IS_SIGNED
#define KAPHEIN_UINTLEAST16_MINIMUM KAPHEIN_x_INTEGER_MINIMUM_VALUE(KAPHEIN_UINTLEAST16_IS_SIGNED, KAPHEIN_UINTLEAST16_BITSIZE)
#define KAPHEIN_UINTLEAST16_MAXIMUM KAPHEIN_x_INTEGER_MAXIMUM_VALUE(KAPHEIN_UINTLEAST16_IS_SIGNED, KAPHEIN_UINTLEAST16_BITSIZE)

typedef KAPHEIN_COMPOPT_INTLEAST32_TYPE kaphein_IntLeast32;
#define KAPHEIN_INTLEAST32_BITSIZE KAPHEIN_COMPOPT_INTLEAST32_BITSIZE
#define KAPHEIN_INTLEAST32_IS_SIGNED KAPHEIN_COMPOPT_INTLEAST32_IS_SIGNED
#define KAPHEIN_INTLEAST32_MINIMUM KAPHEIN_x_INTEGER_MINIMUM_VALUE(KAPHEIN_INTLEAST32_IS_SIGNED, KAPHEIN_INTLEAST32_BITSIZE)
#define KAPHEIN_INTLEAST32_MAXIMUM KAPHEIN_x_INTEGER_MAXIMUM_VALUE(KAPHEIN_INTLEAST32_IS_SIGNED, KAPHEIN_INTLEAST32_BITSIZE)

typedef KAPHEIN_COMPOPT_UINTLEAST32_TYPE kaphein_UIntLeast32;
#define KAPHEIN_UINTLEAST32_BITSIZE KAPHEIN_COMPOPT_UINTLEAST32_BITSIZE
#define KAPHEIN_UINTLEAST32_IS_SIGNED KAPHEIN_COMPOPT_UINTLEAST32_IS_SIGNED
#define KAPHEIN_UINTLEAST32_MINIMUM KAPHEIN_x_INTEGER_MINIMUM_VALUE(KAPHEIN_UINTLEAST32_IS_SIGNED, KAPHEIN_UINTLEAST32_BITSIZE)
#define KAPHEIN_UINTLEAST32_MAXIMUM KAPHEIN_x_INTEGER_MAXIMUM_VALUE(KAPHEIN_UINTLEAST32_IS_SIGNED, KAPHEIN_UINTLEAST32_BITSIZE)

typedef KAPHEIN_COMPOPT_INTLEAST64_TYPE kaphein_IntLeast64;
#define KAPHEIN_INTLEAST64_BITSIZE KAPHEIN_COMPOPT_INTLEAST64_BITSIZE
#define KAPHEIN_INTLEAST64_IS_SIGNED KAPHEIN_COMPOPT_INTLEAST64_IS_SIGNED
#define KAPHEIN_INTLEAST64_MINIMUM KAPHEIN_x_INTEGER_MINIMUM_VALUE(KAPHEIN_INTLEAST64_IS_SIGNED, KAPHEIN_INTLEAST64_BITSIZE)
#define KAPHEIN_INTLEAST64_MAXIMUM KAPHEIN_x_INTEGER_MAXIMUM_VALUE(KAPHEIN_INTLEAST64_IS_SIGNED, KAPHEIN_INTLEAST64_BITSIZE)

typedef KAPHEIN_COMPOPT_UINTLEAST64_TYPE kaphein_UIntLeast64;
#define KAPHEIN_UINTLEAST64_BITSIZE KAPHEIN_COMPOPT_UINTLEAST64_BITSIZE
#define KAPHEIN_UINTLEAST64_IS_SIGNED KAPHEIN_COMPOPT_UINTLEAST64_IS_SIGNED
#define KAPHEIN_UINTLEAST64_MINIMUM KAPHEIN_x_INTEGER_MINIMUM_VALUE(KAPHEIN_UINTLEAST64_IS_SIGNED, KAPHEIN_UINTLEAST64_BITSIZE)
#define KAPHEIN_UINTLEAST64_MAXIMUM KAPHEIN_x_INTEGER_MAXIMUM_VALUE(KAPHEIN_UINTLEAST64_IS_SIGNED, KAPHEIN_UINTLEAST64_BITSIZE)

typedef KAPHEIN_COMPOPT_SIZE_TYPE kaphein_Size;
#define KAPHEIN_SIZE_BITSIZE KAPHEIN_COMPOPT_SIZE_BITSIZE
#define KAPHEIN_SIZE_IS_SIGNED 0
#define KAPHEIN_SIZE_MINIMUM KAPHEIN_x_INTEGER_MINIMUM_VALUE(KAPHEIN_SIZE_IS_SIGNED, KAPHEIN_SIZE_BITSIZE)
#define KAPHEIN_SIZE_MAXIMUM KAPHEIN_x_INTEGER_MAXIMUM_VALUE(KAPHEIN_SIZE_IS_SIGNED, KAPHEIN_SIZE_BITSIZE)

typedef KAPHEIN_COMPOPT_SSIZE_TYPE kaphein_SSize;
#define KAPHEIN_SSIZE_BITSIZE KAPHEIN_COMPOPT_SIZE_BITSIZE
#define KAPHEIN_SSIZE_IS_SIGNED 1
#define KAPHEIN_SSIZE_MINIMUM KAPHEIN_x_INTEGER_MINIMUM_VALUE(KAPHEIN_SSIZE_IS_SIGNED, KAPHEIN_SSIZE_BITSIZE)
#define KAPHEIN_SSIZE_MAXIMUM KAPHEIN_x_INTEGER_MAXIMUM_VALUE(KAPHEIN_SSIZE_IS_SIGNED, KAPHEIN_SSIZE_BITSIZE)

typedef KAPHEIN_COMPOPT_INTPTR_TYPE kaphein_IntPtr;
#define KAPHEIN_INTPTR_MINIMUM ((kaphein_IntPtr)KAPHEIN_COMPOPT_INTPTR_MINIMUM)
#define KAPHEIN_INTPTR_MAXIMUM ((kaphein_IntPtr)KAPHEIN_COMPOPT_INTPTR_MAXIMUM)

typedef KAPHEIN_COMPOPT_UINTPTR_TYPE kaphein_UIntPtr;
#define KAPHEIN_UINTPTR_MINIMUM ((kaphein_UIntPtr)KAPHEIN_COMPOPT_UINTPTR_MINIMUM)
#define KAPHEIN_UINTPTR_MAXIMUM ((kaphein_UIntPtr)KAPHEIN_COMPOPT_UINTPTR_MAXIMUM)

typedef KAPHEIN_COMPOPT_PTRDIFF_TYPE kaphein_PtrDiff;
#define KAPHEIN_PTRDIFF_MINIMUM ((kaphein_PtrDiff)KAPHEIN_COMPOPT_PTRDIFF_MINIMUM)
#define KAPHEIN_PTRDIFF_MAXIMUM ((kaphein_PtrDiff)KAPHEIN_COMPOPT_PTRDIFF_MAXIMUM)

#if !defined(KAPHEIN_COMPOPT_FIXED_SIZE_INTEGRAL_TYPE_MODE) || KAPHEIN_COMPOPT_FIXED_SIZE_INTEGRAL_TYPE_MODE == 1
    #include <stdint.h>
    #include <limits.h>

    #define KAPHEIN_COMPOPT_INT8_TYPE int8_t
    #define KAPHEIN_COMPOPT_INT8_MINIMUM INT8_MIN
    #define KAPHEIN_COMPOPT_INT8_MAXIMUM INT8_MAX

    #define KAPHEIN_COMPOPT_UINT8_TYPE uint8_t
    #define KAPHEIN_COMPOPT_UINT8_MINIMUM 0
    #define KAPHEIN_COMPOPT_UINT8_MAXIMUM UINT8_MAX

    #define KAPHEIN_COMPOPT_INT16_TYPE int16_t
    #define KAPHEIN_COMPOPT_INT16_MINIMUM INT16_MIN
    #define KAPHEIN_COMPOPT_INT16_MAXIMUM INT16_MAX

    #define KAPHEIN_COMPOPT_UINT16_TYPE uint16_t
    #define KAPHEIN_COMPOPT_UINT16_MINIMUM 0
    #define KAPHEIN_COMPOPT_UINT16_MAXIMUM UINT16_MAX

    #define KAPHEIN_COMPOPT_INT32_TYPE int32_t
    #define KAPHEIN_COMPOPT_INT32_MINIMUM INT32_MIN
    #define KAPHEIN_COMPOPT_INT32_MAXIMUM INT32_MAX

    #define KAPHEIN_COMPOPT_UINT32_TYPE uint32_t
    #define KAPHEIN_COMPOPT_UINT32_MINIMUM 0
    #define KAPHEIN_COMPOPT_UINT32_MAXIMUM UINT32_MAX

    #define KAPHEIN_COMPOPT_INT64_TYPE int64_t
    #define KAPHEIN_COMPOPT_INT64_MINIMUM INT64_MIN
    #define KAPHEIN_COMPOPT_INT64_MAXIMUM INT64_MAX

    #define KAPHEIN_COMPOPT_UINT64_TYPE uint64_t
    #define KAPHEIN_COMPOPT_UINT64_MINIMUM 0
    #define KAPHEIN_COMPOPT_UINT64_MAXIMUM UINT64_MAX
#endif

typedef KAPHEIN_COMPOPT_INT8_TYPE kaphein_Int8;
#define KAPHEIN_INT8_MINIMUM ((kaphein_Int8)KAPHEIN_COMPOPT_INT8_MINIMUM)
#define KAPHEIN_INT8_MAXIMUM ((kaphein_Int8)KAPHEIN_COMPOPT_INT8_MAXIMUM)

typedef KAPHEIN_COMPOPT_UINT8_TYPE kaphein_UInt8;
#define KAPHEIN_UINT8_MINIMUM ((kaphein_UInt8)KAPHEIN_COMPOPT_UINT8_MINIMUM)
#define KAPHEIN_UINT8_MAXIMUM ((kaphein_UInt8)KAPHEIN_COMPOPT_UINT8_MAXIMUM)

typedef KAPHEIN_COMPOPT_INT16_TYPE kaphein_Int16;
#define KAPHEIN_INT16_MINIMUM ((kaphein_Int16)KAPHEIN_COMPOPT_INT16_MINIMUM)
#define KAPHEIN_INT16_MAXIMUM ((kaphein_Int16)KAPHEIN_COMPOPT_INT16_MAXIMUM)

typedef KAPHEIN_COMPOPT_UINT16_TYPE kaphein_UInt16;
#define KAPHEIN_UINT16_MINIMUM ((kaphein_UInt16)KAPHEIN_COMPOPT_UINT16_MINIMUM)
#define KAPHEIN_UINT16_MAXIMUM ((kaphein_UInt16)KAPHEIN_COMPOPT_UINT16_MAXIMUM)

typedef KAPHEIN_COMPOPT_INT32_TYPE kaphein_Int32;
#define KAPHEIN_INT32_MINIMUM ((kaphein_Int32)KAPHEIN_COMPOPT_INT32_MINIMUM)
#define KAPHEIN_INT32_MAXIMUM ((kaphein_Int32)KAPHEIN_COMPOPT_INT32_MAXIMUM)

typedef KAPHEIN_COMPOPT_UINT32_TYPE kaphein_UInt32;
#define KAPHEIN_UINT32_MINIMUM ((kaphein_UInt32)KAPHEIN_COMPOPT_UINT32_MINIMUM)
#define KAPHEIN_UINT32_MAXIMUM ((kaphein_UInt32)KAPHEIN_COMPOPT_UINT32_MAXIMUM)

typedef KAPHEIN_COMPOPT_INT64_TYPE kaphein_Int64;
#define KAPHEIN_INT64_MINIMUM ((kaphein_Int64)KAPHEIN_COMPOPT_INT64_MINIMUM)
#define KAPHEIN_INT64_MAXIMUM ((kaphein_Int64)KAPHEIN_COMPOPT_INT64_MAXIMUM)

typedef KAPHEIN_COMPOPT_UINT64_TYPE kaphein_UInt64;
#define KAPHEIN_UINT64_MINIMUM ((kaphein_UInt64)KAPHEIN_COMPOPT_UINT64_MINIMUM)
#define KAPHEIN_UINT64_MAXIMUM ((kaphein_UInt64)KAPHEIN_COMPOPT_UINT64_MAXIMUM)

#define KAPHEIN_ssizeof(expr) (((kaphein_SSize)sizeof(expr) & KAPHEIN_SSIZE_MAXIMUM))

#define KAPHEIN_x_offsetof(st, m) ((kaphein_SSize)(&(((st *)0)->m)))

#define KAPHEIN_x_objintptrof(ifPtr) ((kaphein_IntPtr)ifPtr - (kaphein_IntPtr)ifPtr->offsetFromThisObj)

/* ******************************** */

/* ******************************** */
/* Thread model */

#if !defined(KAPHEIN_COMPOPT_THREAD_MODEL_MODE) || KAPHEIN_COMPOPT_THREAD_MODEL_MODE == 1
    #if defined(KAPHEIN_PLATFORM_WINDOWS)
        #define KAPHEIN_THREAD_MODEL KAPHEIN_THREAD_MODEL_WINTHREAD
    #elif defined(KAPHEIN_PLATFORM_UNIX) \
        || defined(KAPHEIN_PLATFORM_LINUX) \
        || defined(KAPHEIN_PLATFORM_ANDROID)
        #define KAPHEIN_THREAD_MODEL KAPHEIN_THREAD_MODEL_PTHREAD
    #else
        #define KAPHEIN_THREAD_MODEL KAPHEIN_THREAD_MODEL_UNKNOWN
    #endif
#endif

/* ******************************** */

/* ******************************** */
/* Function attributes */

#if defined(_MSC_VER)
    #if _MSC_VER < 1700
        #define KAPHEIN_ATTRIBUTE_INLINE __inline
        #define KAPHEIN_ATTRIBUTE_FORCE_INLINE __forceinline
    #else
        #define KAPHEIN_ATTRIBUTE_INLINE inline
        #define KAPHEIN_ATTRIBUTE_FORCE_INLINE __forceinline
    #endif
#elif defined(__GNUC__)
    #define KAPHEIN_ATTRIBUTE_INLINE inline
    #define KAPHEIN_ATTRIBUTE_FORCE_INLINE inline __attribute__((always_inline))
#else
    #define KAPHEIN_ATTRIBUTE_INLINE
    #define KAPHEIN_ATTRIBUTE_FORCE_INLINE
#endif

#if !defined(KAPHEIN_COMPOPT_DLL_API_MODE) || KAPHEIN_COMPOPT_DLL_API_MODE == 0
    #if defined(_MSC_VER)
        #define KAPHEIN_ATTRIBUTE_DLL_API __declspec(dllimport)
    #elif defined(__GNUC__)
        #define KAPHEIN_ATTRIBUTE_DLL_API __attribute__ ((dllimport))
    #else
        #define KAPHEIN_ATTRIBUTE_DLL_API
    #endif
#elif defined(KAPHEIN_COMPOPT_DLL_API_MODE) && KAPHEIN_COMPOPT_DLL_API_MODE == 1
    #if defined(_MSC_VER)
        #define KAPHEIN_ATTRIBUTE_DLL_API __declspec(dllexport)
    #elif defined(__GNUC__)
        #define KAPHEIN_ATTRIBUTE_DLL_API __attribute__ ((dllexport))
    #else
        #define KAPHEIN_ATTRIBUTE_DLL_API
    #endif
#else
    #define KAPHEIN_ATTRIBUTE_DLL_API
#endif

#ifdef __cplusplus
    #define KAPHEIN_ATTRIBUTE_C_LINKAGE extern "C"
#else
    #define KAPHEIN_ATTRIBUTE_C_LINKAGE
#endif

/* ******************************** */

#if defined(_MSC_VER)
    #define KAPHEIN_CDECL __cdecl
    #define KAPHEIN_STDCALL __stdcall
#elif defined(__GNUC__)
    #define KAPHEIN_CDECL __attribute__((__cdecl__))
    #define KAPHEIN_STDCALL __attribute__((stdcall))
#else
    #define KAPHEIN_CDECL
    #define KAPHEIN_STDCALL
#endif

/* ******************************** */
/* Static assert operator */

#ifndef __cplusplus
    #if defined(_MSC_VER)
        #if _MSC_VER < 1600
            #define static_assert KAPHEIN_x_static_assert
        #endif
    #elif (!defined(__STDC_VERSION__) || __STDC_VERSION__ < 199901L)
        #define static_assert KAPHEIN_x_static_assert
    #endif
#else
    #if defined(_MSC_VER)
        #if _MSC_VER < 1600
            #define static_assert KAPHEIN_x_static_assert
        #endif
    #elif defined(__GNUC__)
        #if (__GNUC__ < 4 || (__GNUC__ == 4 && __GNUC_MINOR__ < 6))
            #define static_assert KAPHEIN_x_static_assert
        #endif
    #else
        #define static_assert
    #endif
#endif

/* ******************************** */

#if defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define KAPHEIN_DECLARE_FAM(type, name) \
        type name[];
#elif defined(_MSC_VER)
    #define KAPHEIN_DECLARE_FAM(type, name) \
        __pragma(warning(push)) \
        __pragma(warning(disable:4200)) \
        type name[0]; \
        __pragma(warning(pop))
#elif defined(__GNUC__)
    #define KAPHEIN_DECLARE_FAM(type, name) \
        _Pragma("GCC diagnostic push") \
        _Pragma("GCC diagnostic ignored \"-Wunused-parameter\"") \
        type name[0]; \
        _Pragma("GCC diagnostic pop")
#else
    #define KAPHEIN_DECLARE_FAM(type, name) \
        type name[0];
#endif

/**
 *  @brief An enum that defines error codes.
 */
enum kaphein_ErrorCode
{
    kapheinErrorCodeNoError = 0

    , kapheinErrorCodeUnknownError = -1

    , kapheinErrorCodeReserved2 = -2

    , kapheinErrorCodeOperationTimeout = -3

    , kapheinErrorCodeOperationInvalid = -4

    , kapheinErrorCodeReserved5 = -5

    , kapheinErrorCodeNotImplemented = -6

    , kapheinErrorCodeNotSupported = -7

    , kapheinErrorCodeNotEnoughBufferSpace = -8

    , kapheinErrorCodeCollectionOverflow = -10

    , kapheinErrorCodeCollectionUnderflow = -11

    , kapheinErrorCodeNoSuchElement = -12

    , kapheinErrorCodeElementAlreadyExists = -13

    , kapheinErrorCodeIterationStopped = -14

    , kapheinErrorCodeArgumentInvalid = -20

    , kapheinErrorCodeArgumentNull = kapheinErrorCodeArgumentInvalid - 1

    , kapheinErrorCodeArgumentOutOfRange = kapheinErrorCodeArgumentInvalid - 2

    , kapheinErrorCodeArgumentFormatInvalid = kapheinErrorCodeArgumentInvalid - 3

    , kapheinErrorCodeMemoryAllocationFailed = -30

    , kapheinErrorCodeMemoryMisaligned = -31

    , kapheinErrorCodePlatformResourceAllocationFailed = -40

    , kapheinErrorCodeIoError = -50

    , kapheinErrorCodeIoDeviceNotFound = kapheinErrorCodeIoError - 1

    , kapheinErrorCodeIoAccessDenied = kapheinErrorCodeIoError - 2

    , kapheinErrorCodeIoEndOfStreamReached = kapheinErrorCodeIoError - 3

    , kapheinErrorCodeIoReadFailed = kapheinErrorCodeIoError - 4

    , kapheinErrorCodeIoWriteFailed = kapheinErrorCodeIoError - 5

    , kapheinErrorCodeArithmeticError = -80

    , kapheinErrorCodeDivisionByZero = kapheinErrorCodeArithmeticError - 1

    , kapheinErrorCodeSingularMatrix = kapheinErrorCodeArithmeticError - 2
};

/**
 *  @brief Gets the error message text of specified error code.
 *  @param errorCode 
 *  @param[out] messageOut 
 *  @param[in,out] messageSizeInOut 
 *  @return An error code.
 */
KAPHEIN_ATTRIBUTE_C_LINKAGE
KAPHEIN_ATTRIBUTE_DLL_API
enum kaphein_ErrorCode
kaphein_ErrorCode_getMessage(
    enum kaphein_ErrorCode errorCode
    , char * messageOut
    , kaphein_SSize * messageSizeInOut
);

/* ******************************** */
/* Function typedefs */

struct kaphein_mem_Allocator;

typedef
enum kaphein_ErrorCode
kaphein_copyConstructFunction(
    void * dest
    , const void * src
    , struct kaphein_mem_Allocator * allocator
);

/**
 *  @brief A definition for a function for destructing an object.
 *  @details This function should act like destructors in object-oriented programming languages.
 *  <br/>Destructing an object must succeeded except the pointer to an object is null.
 *  @param thisObj A pointer to an object to be destructed.
 */
typedef
enum kaphein_ErrorCode
kaphein_destructFunction(
    void * thisObj
);

/* ******************************** */

#endif
